   
   
   
   
   
   
   
   
   
   if(this.state.isLoading){
        return(
          <View>
          <Text>Loading...</Text>
          <ActivityIndicator />
          </View>
        );

      }else{
        return(
          <View>
          <View>
          <FlatList
          data={this.state.UserListData}
          renderItem={({item}) =>
            <View>
        }
          
          </View>
          </View>
        )
      }


  <NavigationContainer>
        <Stack.Navigator>
          <Stack.Screen name="Home" component={Home}/>
          <Stack.Screen name="NewMessage" component={}/>
 

        </Stack.Navigator>
      </NavigationContainer>




      homescreen:


       

    render() {

        const navigation = this.props.navigation;



        return(
            <><View>

                <Button
                    title="Login"
                    onPress={() => navigation.navigate('Login')} />
            </View>
            
            <ScrollView>



                    <View style={{ flex: 10, justifyContent: 'center', backgroundColor: '#F5FCFF' }}>

                        <View style={{ flex: 1, backgroundColor: "lightgrey", justifyContent: 'center', alignItems: 'center', margin: "5%" }}>
                            <Text style={{ flex: 1, backgroundColor: "lightblue" }}>User 1</Text>

                            <Text style={{ flex: 1, backgroundColor: "white", justifyContent: 'center', alignItems: 'center', margin: "5%" }}>Example Post Text</Text>
                        </View>
                    </View>
                </ScrollView></>
        );
    }
    
    




 if(password == confirmPass){
            
        }else{
            alert("Passwords do not match.");
                throw 'Passwords do not match.';
            }

   checkEmail() {

        var email = this.state.email;
        var filter = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
    
        if (!filter.test(email.value)) {
           // alert('Enter a valid email address');
            alert(this.state.email);
        email.focus;
        return false;
     } else {
         return true;
     }
    }

    checkPassword() {
        var minChar = 5
        var email = this.state.email;

        if (!minChar.test(email.value)) {
            alert('Password must be atleast 4 characters');
            email.focus;
            return false;
        }
        else{
        return true;
    }
    }




    <View style={styles.formItem}>
    <Text style={styles.formLabel}>Confirm Password:</Text>
    <TextInput
        // placeholder="confirm password"
        // stye={styles.formInput}
         //onChangeText={(confirmPass) => this.setState({confirmPass})}
         //value={this.state.confirmPass}
     />
 </View>




 <View>
                <ScrollView>
                    <Text style={styles.title}>Create an account</Text>

                    <View style={styles.formItem}>
                        <Text style={styles.formLabel}>First Name:</Text>
                        <TextInput
                            placeholder="enter first name"
                            stye={styles.formInput}
                            onChangeText={(firstName) => this.setState({firstName})}
                            value={this.state.firstName}
                        />
                    </View>

                    <View style={styles.formItem}>
                        <Text style={styles.formLabel}>Last Name:</Text>
                        <TextInput
                            placeholder="enter last name"
                            stye={styles.formInput}
                            onChangeText={(lastName) => this.setState({lastName})}
                            value={this.state.lastName}
                        />
                    </View>

                    <View style={styles.formItem}>
                        <Text style={styles.formLabel}>Email:</Text>
                        <TextInput
                            placeholder="enter email"
                            stye={styles.formInput}
                            onChangeText={(email) => this.setState({email})}
                            value={this.state.email}
                        />
                    </View>

                    <View style={styles.formItem}>
                        <Text style={styles.formLabel}>Password:</Text>
                        <TextInput
                            placeholder="enter password"
                            stye={styles.formInput}
                            secureEntryText
                            onChangeText={(password) => this.setState({password})}
                            value={this.state.password}
                        />
                    </View>

                   


                    <View style={styles.formItem}>
                        <TouchableOpacity
                            style={styles.formTouch}
                            onPress={() => this.addUser()}
                        >
                            <Text style={styles.formTouchText}>Sign Up</Text>
                        </TouchableOpacity>
                    </View>

                    <Button
                    title="Already have an account?"
                    onPress={() => navigation.navigate('Login')}
                    />

                </ScrollView>
            </View>







<ScrollView>
          <Text style={styles.title}>Login</Text>

          <View style={{padding:10}}>
              <Text style={{fontSize:15, color:'steelblue'}}>Email</Text>
                  <TextInput
                  placeholder="enter email"
                  stye={{borderWidth:1, borderColor: 'lightblue', borderRadius:5}}
                  onChangeText={(firstName) => this.setState({firstName})}
                  value={this.state.email}
              />
          </View>



          <View style={{padding:10}}>
              <Text style={{fontSize:15, color:'steelblue'}}>Password</Text>
                  <TextInput
                  placeholder="enter email"
                  stye={{borderWidth:1, borderColor: 'lightblue', borderRadius:5}}
                  onChangeText={(firstName) => this.setState({firstName})}
                  value={this.state.password}
              />
          </View>

          <View style={{padding:10}}>
              <TouchableOpacity
              style={{ backgroundColor:'lightblue', padding:10, alignItems:'center'}}
              onPress={() => this.login()}
              >
                  <Text style={{fontSize:20, fontWeight:'bold', color:'steelblue'}}>Login</Text>
              </TouchableOpacity>
          </View>

          <View style={{padding:10}}>
              <TouchableOpacity
              style={{ backgroundColor:'lightblue', padding:10, alignItems:'center'}}
              onPress={() => this.props.navigation.navigate("SignUp")}
              >
                  <Text style={{fontSize:20, fontWeight:'bold', color:'steelblue'}}>Sign Up</Text>
              </TouchableOpacity>
          </View>
          
      </ScrollView>
    
class HomeScreen extends Component {

    constructor(props) {
        super(props);

        this.state = {
          isLoading: true,
          listData: []
        }
        
    }

    componentDidMount() {
        this.unsubscribe = this.props.navigation.addListener('focus', () => {
          this.checkLoggedIn();
        });
      
        this.getData();
      }
    
      componentWillUnmount() {
        this.unsubscribe();
      }
    
      getData = async () => {
        const value = await AsyncStorage.getItem('@session_token');
        return fetch("http://localhost:3333/api/1.0.0/search", {
              'headers': {
                'X-Authorization':  value
              }
            })
            .then((response) => {
                if(response.status === 200){
                    return response.json()
                }else if(response.status === 401){
                  this.props.navigation.navigate("Login");
                }else{
                    throw 'Something went wrong';
                }
            })
            .then((responseJson) => {
              this.setState({
                isLoading: false,
                listData: responseJson
              })
            })
            .catch((error) => {
                console.log(error);
            })
      }
    
      checkLoggedIn = async () => {
        const value = await AsyncStorage.getItem('@session_token');
        if (value == null) {
            this.props.navigation.navigate('Login');
        }
      };
    
      render() {
    
        if (this.state.isLoading){
          return (
            <View
              style={{
                flex: 1,
                flexDirection: 'column',
                justifyContent: 'center',
                alignItems: 'center',
              }}>
              <Text>Loading..</Text>
            </View>
          );
        }else{
          return (
            <View>
              <FlatList
                    data={this.state.listData}
                    renderItem={({item}) => (
                        <View>
                          <Text>{item.user_givenname} {item.user_familyname}</Text>
                        </View>
                    )}
                    keyExtractor={(item,index) => item.user_id.toString()}
                  />
            </View>
          );
        }
        
      }
    }





    



export default HomeScreen;